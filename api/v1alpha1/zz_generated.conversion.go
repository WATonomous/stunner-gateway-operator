//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 The l7mp/stunner team.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "github.com/l7mp/stunner-gateway-operator/api/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Dataplane)(nil), (*v1.Dataplane)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Dataplane_To_v1_Dataplane(a.(*Dataplane), b.(*v1.Dataplane), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.Dataplane)(nil), (*Dataplane)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Dataplane_To_v1alpha1_Dataplane(a.(*v1.Dataplane), b.(*Dataplane), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DataplaneList)(nil), (*v1.DataplaneList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_DataplaneList_To_v1_DataplaneList(a.(*DataplaneList), b.(*v1.DataplaneList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.DataplaneList)(nil), (*DataplaneList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_DataplaneList_To_v1alpha1_DataplaneList(a.(*v1.DataplaneList), b.(*DataplaneList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*GatewayConfig)(nil), (*v1.GatewayConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_GatewayConfig_To_v1_GatewayConfig(a.(*GatewayConfig), b.(*v1.GatewayConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.GatewayConfig)(nil), (*GatewayConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_GatewayConfig_To_v1alpha1_GatewayConfig(a.(*v1.GatewayConfig), b.(*GatewayConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*GatewayConfigList)(nil), (*v1.GatewayConfigList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_GatewayConfigList_To_v1_GatewayConfigList(a.(*GatewayConfigList), b.(*v1.GatewayConfigList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.GatewayConfigList)(nil), (*GatewayConfigList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_GatewayConfigList_To_v1alpha1_GatewayConfigList(a.(*v1.GatewayConfigList), b.(*GatewayConfigList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.GatewayConfigSpec)(nil), (*GatewayConfigSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_GatewayConfigSpec_To_v1alpha1_GatewayConfigSpec(a.(*v1.GatewayConfigSpec), b.(*GatewayConfigSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*StaticService)(nil), (*v1.StaticService)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_StaticService_To_v1_StaticService(a.(*StaticService), b.(*v1.StaticService), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.StaticService)(nil), (*StaticService)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_StaticService_To_v1alpha1_StaticService(a.(*v1.StaticService), b.(*StaticService), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*StaticServiceList)(nil), (*v1.StaticServiceList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_StaticServiceList_To_v1_StaticServiceList(a.(*StaticServiceList), b.(*v1.StaticServiceList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.StaticServiceList)(nil), (*StaticServiceList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_StaticServiceList_To_v1alpha1_StaticServiceList(a.(*v1.StaticServiceList), b.(*StaticServiceList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.StaticServiceSpec)(nil), (*StaticServiceSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_StaticServiceSpec_To_v1alpha1_StaticServiceSpec(a.(*v1.StaticServiceSpec), b.(*StaticServiceSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1.DataplaneSpec)(nil), (*DataplaneSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_DataplaneSpec_To_v1alpha1_DataplaneSpec(a.(*v1.DataplaneSpec), b.(*DataplaneSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*DataplaneSpec)(nil), (*v1.DataplaneSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_DataplaneSpec_To_v1_DataplaneSpec(a.(*DataplaneSpec), b.(*v1.DataplaneSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*GatewayConfigSpec)(nil), (*v1.GatewayConfigSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_GatewayConfigSpec_To_v1_GatewayConfigSpec(a.(*GatewayConfigSpec), b.(*v1.GatewayConfigSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*StaticServiceSpec)(nil), (*v1.StaticServiceSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_StaticServiceSpec_To_v1_StaticServiceSpec(a.(*StaticServiceSpec), b.(*v1.StaticServiceSpec), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_Dataplane_To_v1_Dataplane(in *Dataplane, out *v1.Dataplane, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_DataplaneSpec_To_v1_DataplaneSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Dataplane_To_v1_Dataplane is an autogenerated conversion function.
func Convert_v1alpha1_Dataplane_To_v1_Dataplane(in *Dataplane, out *v1.Dataplane, s conversion.Scope) error {
	return autoConvert_v1alpha1_Dataplane_To_v1_Dataplane(in, out, s)
}

func autoConvert_v1_Dataplane_To_v1alpha1_Dataplane(in *v1.Dataplane, out *Dataplane, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_DataplaneSpec_To_v1alpha1_DataplaneSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_Dataplane_To_v1alpha1_Dataplane is an autogenerated conversion function.
func Convert_v1_Dataplane_To_v1alpha1_Dataplane(in *v1.Dataplane, out *Dataplane, s conversion.Scope) error {
	return autoConvert_v1_Dataplane_To_v1alpha1_Dataplane(in, out, s)
}

func autoConvert_v1alpha1_DataplaneList_To_v1_DataplaneList(in *DataplaneList, out *v1.DataplaneList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1.Dataplane, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Dataplane_To_v1_Dataplane(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_DataplaneList_To_v1_DataplaneList is an autogenerated conversion function.
func Convert_v1alpha1_DataplaneList_To_v1_DataplaneList(in *DataplaneList, out *v1.DataplaneList, s conversion.Scope) error {
	return autoConvert_v1alpha1_DataplaneList_To_v1_DataplaneList(in, out, s)
}

func autoConvert_v1_DataplaneList_To_v1alpha1_DataplaneList(in *v1.DataplaneList, out *DataplaneList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Dataplane, len(*in))
		for i := range *in {
			if err := Convert_v1_Dataplane_To_v1alpha1_Dataplane(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1_DataplaneList_To_v1alpha1_DataplaneList is an autogenerated conversion function.
func Convert_v1_DataplaneList_To_v1alpha1_DataplaneList(in *v1.DataplaneList, out *DataplaneList, s conversion.Scope) error {
	return autoConvert_v1_DataplaneList_To_v1alpha1_DataplaneList(in, out, s)
}

func autoConvert_v1alpha1_DataplaneSpec_To_v1_DataplaneSpec(in *DataplaneSpec, out *v1.DataplaneSpec, s conversion.Scope) error {
	out.Replicas = in.Replicas
	out.Image = in.Image
	out.ImagePullPolicy = in.ImagePullPolicy
	out.Command = in.Command
	out.Args = in.Args
	out.Env = in.Env
	out.Resources = in.Resources
	out.TerminationGracePeriodSeconds = in.TerminationGracePeriodSeconds
	out.HostNetwork = in.HostNetwork
	out.Affinity = in.Affinity
	out.SecurityContext = in.SecurityContext
	out.Tolerations = in.Tolerations
	// WARNING: in.HealthCheckPort requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1_DataplaneSpec_To_v1alpha1_DataplaneSpec(in *v1.DataplaneSpec, out *DataplaneSpec, s conversion.Scope) error {
	out.Image = in.Image
	out.ImagePullPolicy = in.ImagePullPolicy
	out.Command = in.Command
	out.Args = in.Args
	// WARNING: in.EnvFrom requires manual conversion: does not exist in peer-type
	out.Env = in.Env
	out.Replicas = in.Replicas
	out.Resources = in.Resources
	out.TerminationGracePeriodSeconds = in.TerminationGracePeriodSeconds
	out.HostNetwork = in.HostNetwork
	out.Affinity = in.Affinity
	out.SecurityContext = in.SecurityContext
	out.Tolerations = in.Tolerations
	// WARNING: in.DisableHealthCheck requires manual conversion: does not exist in peer-type
	// WARNING: in.EnableMetricsEnpoint requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha1_GatewayConfig_To_v1_GatewayConfig(in *GatewayConfig, out *v1.GatewayConfig, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_GatewayConfigSpec_To_v1_GatewayConfigSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_GatewayConfig_To_v1_GatewayConfig is an autogenerated conversion function.
func Convert_v1alpha1_GatewayConfig_To_v1_GatewayConfig(in *GatewayConfig, out *v1.GatewayConfig, s conversion.Scope) error {
	return autoConvert_v1alpha1_GatewayConfig_To_v1_GatewayConfig(in, out, s)
}

func autoConvert_v1_GatewayConfig_To_v1alpha1_GatewayConfig(in *v1.GatewayConfig, out *GatewayConfig, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_GatewayConfigSpec_To_v1alpha1_GatewayConfigSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_GatewayConfig_To_v1alpha1_GatewayConfig is an autogenerated conversion function.
func Convert_v1_GatewayConfig_To_v1alpha1_GatewayConfig(in *v1.GatewayConfig, out *GatewayConfig, s conversion.Scope) error {
	return autoConvert_v1_GatewayConfig_To_v1alpha1_GatewayConfig(in, out, s)
}

func autoConvert_v1alpha1_GatewayConfigList_To_v1_GatewayConfigList(in *GatewayConfigList, out *v1.GatewayConfigList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1.GatewayConfig, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_GatewayConfig_To_v1_GatewayConfig(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_GatewayConfigList_To_v1_GatewayConfigList is an autogenerated conversion function.
func Convert_v1alpha1_GatewayConfigList_To_v1_GatewayConfigList(in *GatewayConfigList, out *v1.GatewayConfigList, s conversion.Scope) error {
	return autoConvert_v1alpha1_GatewayConfigList_To_v1_GatewayConfigList(in, out, s)
}

func autoConvert_v1_GatewayConfigList_To_v1alpha1_GatewayConfigList(in *v1.GatewayConfigList, out *GatewayConfigList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GatewayConfig, len(*in))
		for i := range *in {
			if err := Convert_v1_GatewayConfig_To_v1alpha1_GatewayConfig(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1_GatewayConfigList_To_v1alpha1_GatewayConfigList is an autogenerated conversion function.
func Convert_v1_GatewayConfigList_To_v1alpha1_GatewayConfigList(in *v1.GatewayConfigList, out *GatewayConfigList, s conversion.Scope) error {
	return autoConvert_v1_GatewayConfigList_To_v1alpha1_GatewayConfigList(in, out, s)
}

func autoConvert_v1alpha1_GatewayConfigSpec_To_v1_GatewayConfigSpec(in *GatewayConfigSpec, out *v1.GatewayConfigSpec, s conversion.Scope) error {
	// WARNING: in.StunnerConfig requires manual conversion: does not exist in peer-type
	out.Realm = in.Realm
	// WARNING: in.MetricsEndpoint requires manual conversion: does not exist in peer-type
	// WARNING: in.HealthCheckEndpoint requires manual conversion: does not exist in peer-type
	out.AuthType = in.AuthType
	out.Username = in.Username
	out.Password = in.Password
	out.SharedSecret = in.SharedSecret
	out.AuthLifetime = in.AuthLifetime
	out.AuthRef = in.AuthRef
	out.LoadBalancerServiceAnnotations = in.LoadBalancerServiceAnnotations
	out.LogLevel = in.LogLevel
	// WARNING: in.MinPort requires manual conversion: does not exist in peer-type
	// WARNING: in.MaxPort requires manual conversion: does not exist in peer-type
	out.Dataplane = in.Dataplane
	return nil
}

func autoConvert_v1_GatewayConfigSpec_To_v1alpha1_GatewayConfigSpec(in *v1.GatewayConfigSpec, out *GatewayConfigSpec, s conversion.Scope) error {
	out.Dataplane = in.Dataplane
	out.Realm = in.Realm
	out.AuthType = in.AuthType
	out.Username = in.Username
	out.Password = in.Password
	out.SharedSecret = in.SharedSecret
	out.AuthLifetime = in.AuthLifetime
	out.AuthRef = in.AuthRef
	out.LoadBalancerServiceAnnotations = in.LoadBalancerServiceAnnotations
	out.LogLevel = in.LogLevel
	return nil
}

// Convert_v1_GatewayConfigSpec_To_v1alpha1_GatewayConfigSpec is an autogenerated conversion function.
func Convert_v1_GatewayConfigSpec_To_v1alpha1_GatewayConfigSpec(in *v1.GatewayConfigSpec, out *GatewayConfigSpec, s conversion.Scope) error {
	return autoConvert_v1_GatewayConfigSpec_To_v1alpha1_GatewayConfigSpec(in, out, s)
}

func autoConvert_v1alpha1_StaticService_To_v1_StaticService(in *StaticService, out *v1.StaticService, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_StaticServiceSpec_To_v1_StaticServiceSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_StaticService_To_v1_StaticService is an autogenerated conversion function.
func Convert_v1alpha1_StaticService_To_v1_StaticService(in *StaticService, out *v1.StaticService, s conversion.Scope) error {
	return autoConvert_v1alpha1_StaticService_To_v1_StaticService(in, out, s)
}

func autoConvert_v1_StaticService_To_v1alpha1_StaticService(in *v1.StaticService, out *StaticService, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_StaticServiceSpec_To_v1alpha1_StaticServiceSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_StaticService_To_v1alpha1_StaticService is an autogenerated conversion function.
func Convert_v1_StaticService_To_v1alpha1_StaticService(in *v1.StaticService, out *StaticService, s conversion.Scope) error {
	return autoConvert_v1_StaticService_To_v1alpha1_StaticService(in, out, s)
}

func autoConvert_v1alpha1_StaticServiceList_To_v1_StaticServiceList(in *StaticServiceList, out *v1.StaticServiceList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1.StaticService, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_StaticService_To_v1_StaticService(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_StaticServiceList_To_v1_StaticServiceList is an autogenerated conversion function.
func Convert_v1alpha1_StaticServiceList_To_v1_StaticServiceList(in *StaticServiceList, out *v1.StaticServiceList, s conversion.Scope) error {
	return autoConvert_v1alpha1_StaticServiceList_To_v1_StaticServiceList(in, out, s)
}

func autoConvert_v1_StaticServiceList_To_v1alpha1_StaticServiceList(in *v1.StaticServiceList, out *StaticServiceList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StaticService, len(*in))
		for i := range *in {
			if err := Convert_v1_StaticService_To_v1alpha1_StaticService(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1_StaticServiceList_To_v1alpha1_StaticServiceList is an autogenerated conversion function.
func Convert_v1_StaticServiceList_To_v1alpha1_StaticServiceList(in *v1.StaticServiceList, out *StaticServiceList, s conversion.Scope) error {
	return autoConvert_v1_StaticServiceList_To_v1alpha1_StaticServiceList(in, out, s)
}

func autoConvert_v1alpha1_StaticServiceSpec_To_v1_StaticServiceSpec(in *StaticServiceSpec, out *v1.StaticServiceSpec, s conversion.Scope) error {
	// WARNING: in.Ports requires manual conversion: does not exist in peer-type
	out.Prefixes = in.Prefixes
	return nil
}

func autoConvert_v1_StaticServiceSpec_To_v1alpha1_StaticServiceSpec(in *v1.StaticServiceSpec, out *StaticServiceSpec, s conversion.Scope) error {
	out.Prefixes = in.Prefixes
	return nil
}

// Convert_v1_StaticServiceSpec_To_v1alpha1_StaticServiceSpec is an autogenerated conversion function.
func Convert_v1_StaticServiceSpec_To_v1alpha1_StaticServiceSpec(in *v1.StaticServiceSpec, out *StaticServiceSpec, s conversion.Scope) error {
	return autoConvert_v1_StaticServiceSpec_To_v1alpha1_StaticServiceSpec(in, out, s)
}
